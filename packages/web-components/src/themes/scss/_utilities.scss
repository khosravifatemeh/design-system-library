@use "sass:map";

/// @access private
/// @group @carbon/themes
@function merge($map, $maps...) {
  $result: $map;
  @each $map in $maps {
    $result: map.merge($result, $map);
  }
  @return $result;
}
$params: merge($sizes, $layout);

@function params($key) {
  @if map-has-key($params, $key) ==true {
    @return map-get($params, $key);
  } @else {
    @error "has not this key";
  }
}

/// Map deep get
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} Desired value
/// @group @carbon/layout
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map.get($map, $key);
  }
  @return $map;
}

/// Provide a map and index, and get back the relevant key value
/// @access public
/// @param {Map} $map - Map
/// @param {Integer} $index - Key chain
/// @return {String} Desired value
/// @group @carbon/layout
@function key-by-index($map, $index) {
  $keys: map.keys($map);
  @return list.nth($keys, $index);
}

/// Pass in a map, and get the last one in the list back
/// @access public
/// @param {Map} $map - Map
/// @return {*} Desired value
/// @group @carbon/layout
@function last-map-item($map) {
  $total-length: list.length($map);
  @return map.get($map, key-by-index($map, $total-length));
}
